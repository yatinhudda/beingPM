[{"/home/yatender/Desktop/beingPM/beingPM/being_pm/src/index.js":"1","/home/yatender/Desktop/beingPM/beingPM/being_pm/src/reportWebVitals.js":"2","/home/yatender/Desktop/beingPM/beingPM/being_pm/src/App.js":"3","/home/yatender/Desktop/beingPM/beingPM/being_pm/src/Navbar/Navbar.js":"4","/home/yatender/Desktop/beingPM/beingPM/being_pm/src/Content/Content.js":"5","/home/yatender/Desktop/beingPM/beingPM/being_pm/src/Saved/Saved.js":"6"},{"size":500,"mtime":1609868499677,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1609868499677,"results":"9","hashOfConfig":"8"},{"size":11673,"mtime":1611078724842,"results":"10","hashOfConfig":"8"},{"size":919,"mtime":1610975473359,"results":"11","hashOfConfig":"8"},{"size":2174,"mtime":1610813980664,"results":"12","hashOfConfig":"8"},{"size":267,"mtime":1611078918664,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"2fjdzu",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/yatender/Desktop/beingPM/beingPM/being_pm/src/index.js",[],["28","29"],"/home/yatender/Desktop/beingPM/beingPM/being_pm/src/reportWebVitals.js",[],"/home/yatender/Desktop/beingPM/beingPM/being_pm/src/App.js",["30"],"/home/yatender/Desktop/beingPM/beingPM/being_pm/src/Navbar/Navbar.js",[],"/home/yatender/Desktop/beingPM/beingPM/being_pm/src/Content/Content.js",["31","32","33","34","35"],"import React, { useState } from 'react';\nimport './Content.css';\nimport ReactPlayer from 'react-player';\nimport { FaBookmark, FaRegBookmark } from 'react-icons/fa';\n\nconst card = (props) => {\n\n    // const [savedState] = useState({\n    //     isSaved: false\n    // });\n\n    const toggleSaved = () => {\n        console.log(\"Saved state changed\");\n    }\n    \n    return (\n        <div className = \"Content\">\n            <div className = \"heading\">\n                <h1>{props.heading}</h1>\n            </div>\n\n\n            {/* image div */}\n            <div className = \"image\">\n                <img src = {props.imagelink}/>\n                {/* <iframe \n                width=\"100%\" \n                height=\"100%\"\n                margin = \"auto\"\n                display = \"block\" \n                border-radius = \"20px\"\n                src=\"https://www.youtube.com/embed/_Hp_dI0DzY4\" \n                frameborder=\"0\" \n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> */}\n\n                {/* <ReactPlayer \n                    width = '100%'\n                    height = '100%'\n                    url = ''/> */}\n\n\n\n            </div>\n\n            <div className = \"tag-saved\">\n                <div className = \"tag\">\n                    <a>{props.tag}</a>\n                </div>\n                <div className = \"saved\" onClick = {toggleSaved}>\n                    {/* {savedState.saved ? <FaBookmark/> : <FaRegBookmark/>}  */}\n                    <FaRegBookmark/>\n                </div>\n            </div>\n\n            <div className = \"text\">\n                <p> \n                    {props.text} \n                </p>\n            </div>\n\n            {/* <div className = \"link\">\n                <a href = {props.redirectlink}>\n                    <button className = \"buttonlink\">Listen on Spotify</button>\n                </a>\n            </div> */}\n            <div>\n            <a href = {props.redirectlink}>\n                <button className = \"buttonlink\">Listen on Spotify</button>\n            </a>\n            </div>\n            \n\n        </div>\n    );\n}\nexport default card;","/home/yatender/Desktop/beingPM/beingPM/being_pm/src/Saved/Saved.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":5,"column":34,"nodeType":"42","messageId":"43","endLine":5,"endColumn":40},{"ruleId":"40","severity":1,"message":"44","line":1,"column":17,"nodeType":"42","messageId":"43","endLine":1,"endColumn":25},{"ruleId":"40","severity":1,"message":"45","line":3,"column":8,"nodeType":"42","messageId":"43","endLine":3,"endColumn":19},{"ruleId":"40","severity":1,"message":"46","line":4,"column":10,"nodeType":"42","messageId":"43","endLine":4,"endColumn":20},{"ruleId":"47","severity":1,"message":"48","line":25,"column":17,"nodeType":"49","endLine":25,"endColumn":47},{"ruleId":"50","severity":1,"message":"51","line":47,"column":21,"nodeType":"49","endLine":47,"endColumn":24},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'ReactPlayer' is defined but never used.","'FaBookmark' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]